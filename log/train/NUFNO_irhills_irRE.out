{'flow_name': 'irhills', 'model_name': 'NUFNO', 'if_training': True, 'continue_training': False, 'model_path': None, 'saved_dir': './checkpoint/', 'output_dir': './output/', 'save_period': 10, 'plot_interval': 1, 'use_norm': True, 'seed': 0, 'training_type': 'autoregressive', 'epochs': 200, 'dataset': {'single_file': True, 'saved_folder': '/data1/FluidData/periodic_hills/', 'reduced_resolution': 1, 'reduced_batch': 1, 'data_delta_time': 0.1, 'delta_time': 0.1, 'stable_state_diff': 0.001, 'norm_props': True, 'norm_bc': True, 'case_name': 'irRE', 'multi_step_size': 3}, 'dataloader': {'train_batch_size': 32, 'val_batch_size': 32, 'test_batch_size': 1, 'num_workers': 2, 'pin_memory': False}, 'model': {'inputs_channel': 4, 'outputs_channel': 4, 'width': 32, 'modes': 12, 'n_subdomains': 8}, 'optimizer': {'name': 'Adam', 'lr': 0.001, 'weight_decay': 0.0001}, 'scheduler': {'name': 'StepLR', 'step_size': 20, 'gamma': 0.9}}
#Train data:  15840
#Validation data:  1980
#Test data:  2000
input tensor shape:  torch.Size([27, 14, 28, 8, 4])
output tensor shape:  torch.Size([10306, 8, 4])
use min_max normalization with min= [-26.934837341308594, -30.762557983398438, -12.819289207458496, -313.4261779785156] , max= [66.39330291748047, 31.667509078979492, 25.8015079498291, 862.0435180664062]
Norm finished
Model NUFNO has 28333760 parameters
start training...
[Epoch 0] train_loss: 0.008488114080815153, train_l_inf: 1.0222930908203125, time_spend: 251.441
[Epoch 1] train_loss: 0.002634923505324005, train_l_inf: 0.6468391418457031, time_spend: 243.110
